{"version":3,"names":["React","useCallback","useEffect","useLayoutEffect","useMemo","useRef","useState","FlatList","Gesture","GestureDetector","Animated","runOnJS","useAnimatedReaction","useAnimatedScrollHandler","useSharedValue","withSpring","CellRendererComponent","DEFAULT_PROPS","PlaceholderItem","RowItem","PropsProvider","AnimatedValueProvider","useAnimatedValues","RefProvider","useRefs","DraggableFlatListProvider","useAutoScroll","useStableCallback","ScrollOffsetListener","typedMemo","AnimatedFlatList","createAnimatedComponent","DraggableFlatListInner","props","cellDataRef","containerRef","flatlistRef","keyToIndexRef","propsRef","animationConfigRef","activeCellOffset","activeCellSize","activeIndexAnim","containerSize","scrollOffset","scrollViewSize","spacerIndexAnim","horizontalAnim","placeholderOffset","touchTranslate","autoScrollDistance","panGestureState","isTouchActiveNative","viewableIndexMin","viewableIndexMax","disabled","reset","value","setActiveKey","dragHitSlop","scrollEnabled","activationDistance","activationDistanceProp","evtCache","activeKey","layoutAnimationDisabled","setLayoutAnimationDisabled","current","enableLayoutAnimationExperimental","keyExtractor","item","index","Error","dataRef","data","dataHasChanged","map","join","setTimeout","forEach","d","i","key","set","drag","get","cellData","measurements","offset","size","onDragBegin","undefined","onContainerLayout","nativeEvent","layout","width","height","horizontal","onListContentSizeChange","w","h","onContentSizeChange","onContainerTouchStart","onContainerTouchEnd","extraData","renderItem","onRelease","onDragEnd","from","to","newData","splice","onPlaceholderIndexChange","cur","prev","hasMoved","gestureDisabled","panGesture","Pan","onBegin","evt","state","onUpdate","dragMinimalOffset","absoluteX","absoluteY","translation","translationX","translationY","onEnd","_evt","springTo","onTouchesDown","onTouchesUp","hitSlop","activeOffset","activeOffsetX","activeOffsetY","onScroll","onScrollOffsetChange","scrollHandler","contentOffset","x","y","onViewableItemsChanged","info","viewableIndices","viewableItems","filter","isViewable","min","Math","max","containerStyle","renderPlaceholder","simultaneousHandlers","DraggableFlatList","ref","MemoizedInner","forwardRef"],"sources":["DraggableFlatList.tsx"],"sourcesContent":["import React, {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { ListRenderItem, FlatListProps, LayoutChangeEvent } from \"react-native\";\nimport {\n  FlatList,\n  Gesture,\n  GestureDetector,\n  PanGestureHandlerEventPayload,\n} from \"react-native-gesture-handler\";\nimport Animated, {\n  runOnJS,\n  useAnimatedReaction,\n  useAnimatedScrollHandler,\n  useSharedValue,\n  withSpring,\n} from \"react-native-reanimated\";\nimport CellRendererComponent from \"./CellRendererComponent\";\nimport { DEFAULT_PROPS, isWeb } from \"../constants\";\nimport PlaceholderItem from \"./PlaceholderItem\";\nimport RowItem from \"./RowItem\";\nimport { DraggableFlatListProps } from \"../types\";\nimport PropsProvider from \"../context/propsContext\";\nimport AnimatedValueProvider, {\n  useAnimatedValues,\n} from \"../context/animatedValueContext\";\nimport RefProvider, { useRefs } from \"../context/refContext\";\nimport DraggableFlatListProvider from \"../context/draggableFlatListContext\";\nimport { useAutoScroll } from \"../hooks/useAutoScroll\";\nimport { useStableCallback } from \"../hooks/useStableCallback\";\nimport ScrollOffsetListener from \"./ScrollOffsetListener\";\nimport { typedMemo } from \"../utils\";\nimport { GestureUpdateEvent } from \"react-native-gesture-handler\";\n\ntype RNGHFlatListProps<T> = Animated.AnimateProps<\n  FlatListProps<T> & {\n    ref: React.Ref<FlatList<T>>;\n    simultaneousHandlers?: React.Ref<any> | React.Ref<any>[];\n  }\n>;\n\ntype OnViewableItemsChangedCallback<T> = Exclude<\n  FlatListProps<T>[\"onViewableItemsChanged\"],\n  undefined | null\n>;\n\nconst AnimatedFlatList = (Animated.createAnimatedComponent(\n  FlatList\n) as unknown) as <T>(props: RNGHFlatListProps<T>) => React.ReactElement;\n\nfunction DraggableFlatListInner<T>(props: DraggableFlatListProps<T>) {\n  const {\n    cellDataRef,\n    containerRef,\n    flatlistRef,\n    keyToIndexRef,\n    propsRef,\n    animationConfigRef,\n  } = useRefs<T>();\n  const {\n    activeCellOffset,\n    activeCellSize,\n    activeIndexAnim,\n    containerSize,\n    scrollOffset,\n    scrollViewSize,\n    spacerIndexAnim,\n    horizontalAnim,\n    placeholderOffset,\n    touchTranslate,\n    autoScrollDistance,\n    panGestureState,\n    isTouchActiveNative,\n    viewableIndexMin,\n    viewableIndexMax,\n    disabled,\n  } = useAnimatedValues();\n\n  const reset = useStableCallback(() => {\n    activeIndexAnim.value = -1;\n    spacerIndexAnim.value = -1;\n    touchTranslate.value = 0;\n    activeCellSize.value = -1;\n    activeCellOffset.value = -1;\n    setActiveKey(null);\n  });\n\n  const {\n    dragHitSlop = DEFAULT_PROPS.dragHitSlop,\n    scrollEnabled = DEFAULT_PROPS.scrollEnabled,\n    activationDistance: activationDistanceProp = DEFAULT_PROPS.activationDistance,\n  } = props;\n\n  const evtCache = useRef<GestureUpdateEvent<PanGestureHandlerEventPayload> | null>(\n    null\n  );\n\n  let [activeKey, setActiveKey] = useState<string | null>(null);\n  const [layoutAnimationDisabled, setLayoutAnimationDisabled] = useState(\n    !propsRef.current.enableLayoutAnimationExperimental\n  );\n\n  const keyExtractor = useStableCallback((item: T, index: number) => {\n    if (!props.keyExtractor) {\n      throw new Error(\"You must provide a keyExtractor to DraggableFlatList\");\n    }\n    return props.keyExtractor(item, index);\n  });\n\n  const dataRef = useRef(props.data);\n  const dataHasChanged =\n    dataRef.current.map(keyExtractor).join(\"\") !==\n    props.data.map(keyExtractor).join(\"\");\n  dataRef.current = props.data;\n  if (dataHasChanged) {\n    // When data changes make sure `activeKey` is nulled out in the same render pass\n    activeKey = null;\n  }\n\n  useEffect(() => {\n    if (!propsRef.current.enableLayoutAnimationExperimental) return;\n    if (activeKey) {\n      setLayoutAnimationDisabled(true);\n    } else {\n      // setTimeout result of trial-and-error to determine how long to wait before\n      // re-enabling layout animations so that a drag reorder does not trigger it.\n      setTimeout(() => {\n        setLayoutAnimationDisabled(false);\n      }, 100);\n    }\n  }, [activeKey]);\n\n  useLayoutEffect(() => {\n    props.data.forEach((d, i) => {\n      const key = keyExtractor(d, i);\n      keyToIndexRef.current.set(key, i);\n    });\n  }, [props.data, keyExtractor, keyToIndexRef]);\n\n  const drag = useStableCallback((activeKey: string) => {\n    if (disabled.value) return;\n    const index = keyToIndexRef.current.get(activeKey);\n    const cellData = cellDataRef.current.get(activeKey);\n    if (cellData) {\n      activeCellOffset.value = cellData.measurements.offset;\n      activeCellSize.value = cellData.measurements.size;\n    }\n\n    const { onDragBegin } = propsRef.current;\n    if (index !== undefined) {\n      spacerIndexAnim.value = index;\n      activeIndexAnim.value = index;\n      setActiveKey(activeKey);\n      onDragBegin?.(index);\n    }\n  });\n\n  const onContainerLayout = ({\n    nativeEvent: { layout },\n  }: LayoutChangeEvent) => {\n    const { width, height } = layout;\n    containerSize.value = props.horizontal ? width : height;\n    props.onContainerLayout?.({ layout, containerRef });\n  };\n\n  const onListContentSizeChange = (w: number, h: number) => {\n    scrollViewSize.value = props.horizontal ? w : h;\n    props.onContentSizeChange?.(w, h);\n  };\n\n  const onContainerTouchStart = () => {\n    if (!disabled.value) {\n      isTouchActiveNative.value = true;\n    }\n    return false;\n  };\n\n  const onContainerTouchEnd = () => {\n    isTouchActiveNative.value = false;\n  };\n\n  const extraData = useMemo(\n    () => ({\n      activeKey,\n      extraData: props.extraData,\n    }),\n    [activeKey, props.extraData]\n  );\n\n  const renderItem: ListRenderItem<T> = useCallback(\n    ({ item, index }) => {\n      const key = keyExtractor(item, index);\n      if (index !== keyToIndexRef.current.get(key)) {\n        keyToIndexRef.current.set(key, index);\n      }\n\n      return (\n        <RowItem\n          item={item}\n          itemKey={key}\n          renderItem={props.renderItem}\n          drag={drag}\n          extraData={props.extraData}\n        />\n      );\n    },\n    [props.renderItem, props.extraData, drag, keyExtractor]\n  );\n\n  const onRelease = useStableCallback((index: number) => {\n    props.onRelease?.(index);\n  });\n\n  const onDragEnd = useStableCallback(\n    ({ from, to }: { from: number; to: number }) => {\n      const { onDragEnd, data } = props;\n\n      const newData = [...data];\n      if (from !== to) {\n        newData.splice(from, 1);\n        newData.splice(to, 0, data[from]);\n      }\n\n      onDragEnd?.({ from, to, data: newData });\n      reset();\n    }\n  );\n\n  const onPlaceholderIndexChange = useStableCallback((index: number) => {\n    props.onPlaceholderIndexChange?.(index);\n  });\n\n  // Handle case where user ends drag without moving their finger.\n  useAnimatedReaction(\n    () => {\n      return isTouchActiveNative.value;\n    },\n    (cur, prev) => {\n      if (cur !== prev && !cur) {\n        const hasMoved = !!touchTranslate.value;\n        if (!hasMoved && activeIndexAnim.value >= 0 && !disabled.value) {\n          runOnJS(onRelease)(activeIndexAnim.value);\n          runOnJS(onDragEnd)({\n            from: activeIndexAnim.value,\n            to: spacerIndexAnim.value,\n          });\n        }\n      }\n    },\n    [isTouchActiveNative, onDragEnd, onRelease]\n  );\n\n  useAnimatedReaction(\n    () => {\n      return spacerIndexAnim.value;\n    },\n    (cur, prev) => {\n      if (prev !== null && cur !== prev && cur >= 0 && prev >= 0) {\n        runOnJS(onPlaceholderIndexChange)(cur);\n      }\n    },\n    [spacerIndexAnim]\n  );\n\n  const gestureDisabled = useSharedValue(false);\n\n  const panGesture = Gesture.Pan()\n    .onBegin((evt) => {\n      gestureDisabled.value = disabled.value;\n      if (gestureDisabled.value) return;\n      panGestureState.value = evt.state;\n    })\n    .onUpdate((evt) => {\n      if (gestureDisabled.value) return;\n\n      if (props.dragMinimalOffset && props.dragMinimalOffset > 0) {\n        if (horizontalAnim.value) {\n          if (evt.absoluteX < props.dragMinimalOffset) return;\n        } else {\n          if (evt.absoluteY < props.dragMinimalOffset) return;\n        }\n      }\n\n      panGestureState.value = evt.state;\n      const translation = horizontalAnim.value\n        ? evt.translationX\n        : evt.translationY;\n      touchTranslate.value = translation;\n\n      evtCache.current = evt;\n    })\n    .onEnd((_evt) => {\n      if (gestureDisabled.value) return;\n      // Set touch val to current translate val\n      isTouchActiveNative.value = false;\n\n      const evt = evtCache.current ? evtCache.current : _evt;\n\n      const translation = horizontalAnim.value\n        ? evt.translationX\n        : evt.translationY;\n\n      touchTranslate.value = translation + autoScrollDistance.value;\n      panGestureState.value = evt.state;\n\n      // Only call onDragEnd if actually dragging a cell\n      if (activeIndexAnim.value === -1 || disabled.value) return;\n      disabled.value = true;\n      runOnJS(onRelease)(activeIndexAnim.value);\n      const springTo = placeholderOffset.value - activeCellOffset.value;\n      touchTranslate.value = withSpring(\n        springTo,\n        animationConfigRef.current,\n        () => {\n          runOnJS(onDragEnd)({\n            from: activeIndexAnim.value,\n            to: spacerIndexAnim.value,\n          });\n          disabled.value = false;\n        }\n      );\n    })\n    .onTouchesDown(() => {\n      runOnJS(onContainerTouchStart)();\n    })\n    .onTouchesUp(() => {\n      // Turning this into a worklet causes timing issues. We want it to run\n      // just after the finger lifts.\n      runOnJS(onContainerTouchEnd)();\n    });\n\n  if (dragHitSlop) panGesture.hitSlop(dragHitSlop);\n  if (activationDistanceProp) {\n    const activeOffset = [-activationDistanceProp, activationDistanceProp];\n    if (props.horizontal) {\n      panGesture.activeOffsetX(activeOffset);\n    } else {\n      panGesture.activeOffsetY(activeOffset);\n    }\n  }\n\n  const onScroll = useStableCallback((scrollOffset: number) => {\n    props.onScrollOffsetChange?.(scrollOffset);\n  });\n\n  const scrollHandler = useAnimatedScrollHandler(\n    {\n      onScroll: (evt) => {\n        scrollOffset.value = horizontalAnim.value\n          ? evt.contentOffset.x\n          : evt.contentOffset.y;\n        runOnJS(onScroll)(scrollOffset.value);\n      },\n    },\n    [horizontalAnim]\n  );\n\n  useAutoScroll();\n\n  const onViewableItemsChanged = useStableCallback<\n    OnViewableItemsChangedCallback<T>\n  >((info) => {\n    const viewableIndices = info.viewableItems\n      .filter((item) => item.isViewable)\n      .map((item) => item.index)\n      .filter((index): index is number => typeof index === \"number\");\n\n    const min = Math.min(...viewableIndices);\n    const max = Math.max(...viewableIndices);\n    viewableIndexMin.value = min;\n    viewableIndexMax.value = max;\n    props.onViewableItemsChanged?.(info);\n  });\n\n  return (\n    <DraggableFlatListProvider\n      activeKey={activeKey}\n      keyExtractor={keyExtractor}\n      horizontal={!!props.horizontal}\n      layoutAnimationDisabled={layoutAnimationDisabled}\n    >\n      <GestureDetector gesture={panGesture}>\n        <Animated.View\n          style={props.containerStyle}\n          ref={containerRef}\n          onLayout={onContainerLayout}\n        >\n          {props.renderPlaceholder && (\n            <PlaceholderItem renderPlaceholder={props.renderPlaceholder} />\n          )}\n          <AnimatedFlatList\n            {...props}\n            data={props.data}\n            onViewableItemsChanged={onViewableItemsChanged}\n            CellRendererComponent={CellRendererComponent}\n            ref={flatlistRef}\n            onContentSizeChange={onListContentSizeChange}\n            scrollEnabled={!activeKey && scrollEnabled}\n            renderItem={renderItem}\n            extraData={extraData}\n            keyExtractor={keyExtractor}\n            onScroll={scrollHandler}\n            scrollEventThrottle={16}\n            simultaneousHandlers={props.simultaneousHandlers}\n            removeClippedSubviews={false}\n          />\n          {!!props.onScrollOffsetChange && (\n            <ScrollOffsetListener\n              onScrollOffsetChange={props.onScrollOffsetChange}\n              scrollOffset={scrollOffset}\n            />\n          )}\n        </Animated.View>\n      </GestureDetector>\n    </DraggableFlatListProvider>\n  );\n}\n\nfunction DraggableFlatList<T>(\n  props: DraggableFlatListProps<T>,\n  ref?: React.ForwardedRef<FlatList<T>> | null\n) {\n  return (\n    <PropsProvider {...props}>\n      <AnimatedValueProvider>\n        <RefProvider flatListRef={ref}>\n          <MemoizedInner {...props} />\n        </RefProvider>\n      </AnimatedValueProvider>\n    </PropsProvider>\n  );\n}\n\nconst MemoizedInner = typedMemo(DraggableFlatListInner);\n\n// Generic forwarded ref type assertion taken from:\n// https://fettblog.eu/typescript-react-generic-forward-refs/#option-1%3A-type-assertion\nexport default React.forwardRef(DraggableFlatList) as <T>(\n  props: DraggableFlatListProps<T> & { ref?: React.ForwardedRef<FlatList<T>> }\n) => ReturnType<typeof DraggableFlatList>;\n"],"mappings":"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"}